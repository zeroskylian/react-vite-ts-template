const globals = require('globals');

const eslint = require('@eslint/js');
// config
const eslintConfigPrettier = require.resolve('eslint-config-prettier');
const configPrettier = require(eslintConfigPrettier);

// plugin

const eslintPluginTs = require.resolve('@typescript-eslint/eslint-plugin');
const pluginTs = require(eslintPluginTs);

const eslintPluginImport = require.resolve('eslint-plugin-import');
const pluginImport = require(eslintPluginImport);

const eslintPluginjsxa11y = require.resolve('eslint-plugin-jsx-a11y');
const pluginjsxa11y = require(eslintPluginjsxa11y);

const eslintPluginPrettier = require.resolve('eslint-plugin-prettier');
const pluginPrettier = require(eslintPluginPrettier);

const eslintPluginReact = require.resolve('eslint-plugin-react');
const pluginReact = require(eslintPluginReact);

const eslintPluginReactHooks = require.resolve('eslint-plugin-react-hooks');
const pluginReactHook = require(eslintPluginReactHooks);

const eslintPluginReactRefresh = require.resolve('eslint-plugin-react-hooks');
const pluginReactRefresh = require(eslintPluginReactRefresh);

// parser
const parser = require.resolve('@typescript-eslint/parser');
const parserInstance = require(parser);

module.exports = [
  {
    ignores: ['node_modules/**', 'dist/**', '.prettierrc.js', 'env.d.ts'],
    languageOptions: {
      // parser: '@typescript-eslint/parser',
      parser: parserInstance,
      /*
      env: {
        browser: true,
        es2021: true,
        node: true
      }
       */
      globals: {
        ...globals.commonjs,
        ...globals.browser,
        ...globals.es2021,
        ...globals.node
      },
      // parserOptions
      parserOptions: {
        ecmaFeatures: {
          jsx: true
        }
      }
    },
    // plugins: ['react', '@typescript-eslint', 'prettier']
    plugins: {
      prettier: pluginPrettier,
      react: pluginReact,
      '@typescript-eslint': pluginTs
    },
    // extends需要写在rules 中
    rules: {
      // extends: 'eslint:recommended',
      ...eslint.configs.recommended,
      // extends: eslint-config-prettier
      ...configPrettier.rules,
      // extends: plugin:@typescript-eslint/recommended'
      ...pluginTs.configs.recommended.rules,
      // extends: plugin:import/recommended
      ...pluginImport.configs.recommended.rules,
      // extends: plugin:jsx-a11y/recommended
      ...pluginjsxa11y.configs.recommended.rules,
      // extends: plugin:prettier/recommended
      ...pluginPrettier.configs.recommended.rules,
      // extends: 'plugin:react/recommended'
      ...pluginReact.configs.recommended.rules,
      // eslint-plugin-react-hooks
      ...pluginReactHook.configs.recommended.rules,
      // eslint-plugin-react-refresh
      ...pluginReactRefresh.configs.recommended.rules,
      // plugin:react/jsx-runtime
      ...reactPlugin.configs['jsx-runtime'].rules,

      // 自定义规则
      'prettier/prettier': [
        'error',
        {
          singleQuote: true,
          parser: 'typescript',
          semi: true
        }
      ],
      quotes: [1, 'single'],
      semi: [1, 'always'],
      'no-extra-semi': 1,
      'react/jsx-no-target-blank': 0,
      'react/jsx-uses-react': 'error',
      'react/jsx-uses-vars': 'error'
    },
    settings: {
      react: {
        version: 'detect'
      },
      'import/resolver': {
        node: {
          paths: ['src'],
          extensions: ['.js', '.jsx', '.ts', '.tsx']
        },
        alias: {
          map: [['@', './src']]
        }
      }
    }
  }
];
